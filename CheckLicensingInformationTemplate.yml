parameters:
  - name: projectSearchPattern
    type: string
    default: "*"
  - name: LicenseArtifactName
    type: string
    default: "License"
  - name: additionalIgnoredPackages
    type: object
    default: []

jobs:
  - job: "license"
    displayName: "Check Licensing Information"
    variables:
      - name: "licenseCheckerDownloadLocation"
        value: "$(Agent.TempDirectory)/nugetLicenseChecker"
    steps:
      - task: FileList@1
        displayName: "Generate list of involved projects"
        inputs:
          RootFolder: "$(Build.SourcesDirectory)"
          Matching: "${{ parameters.projectSearchPattern }}"
          Destination: "$(Agent.TempDirectory)/projects.json"

      - task: UseDotNet@2
        displayName: "Install .NET 6 SDK"
        inputs:
          packageType: "sdk"
          version: "6.0.x"
          performMultiLevelLookup: true

      - task: DownloadPipelineArtifact@2
        displayName: "Get NuGet license validation tool"
        inputs:
          source: "specific"
          project: "GE Services"
          pipeline: "NugetLicense"
          specificBuildWithTriggering: true
          runVersion: "latest"
          runBranch: "refs/heads/master"
          artifact: "NugetLicense"
          path: "$(licenseCheckerDownloadLocation)"

      - ${{ each ignoredPackage in parameters.additionalIgnoredPackages }}:
        - powershell: |
            $ignoreList = Get-Content packageFilter.json | ConvertFrom-Json
            $ignoreListUpdated = $ignoreList + '${{ ignoredPackage }}'
            ConvertTo-Json -InputObject $ignoreListUpdated | Out-File -FilePath packageFilter.json
            Write-Host "updated packageFilter.json:"
            Get-Content -Path packageFilter.json
          displayName: "Adding NuGet package ${{ ignoredPackage }} to ignore list"
          workingDirectory: $(licenseCheckerDownloadLocation)/LicenseInformation

      - task: DotNetCoreCLI@2
        displayName: "restore nuget packages"
        inputs:
          command: "restore"
          projects: "$(Build.SourcesDirectory)/${{ parameters.projectSearchPattern }}"
          feedsToUse: "select"
          vstsFeed: "GriesserElectronicAG"

      - task: DotNetCoreCLI@2
        displayName: "Validate licenses of used Nuget packages"
        inputs:
          command: "custom"
          custom: "$(licenseCheckerDownloadLocation)/NuGetUtility.dll"
          arguments: "-ji $(Agent.TempDirectory)/projects.json --allowed-license-types $(licenseCheckerDownloadLocation)/LicenseInformation/allowedLicences.json --include-transitive --ignored-packages $(licenseCheckerDownloadLocation)/LicenseInformation/packageFilter.json --licenseurl-to-license-mappings $(licenseCheckerDownloadLocation)/LicenseInformation/urlToLicenseMapping.json --override-package-information $(licenseCheckerDownloadLocation)/LicenseInformation/packageInfo.json"
